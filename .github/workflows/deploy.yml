name: Deploy

on:
  push:
  workflow_dispatch:
  repository_dispatch:

jobs:
  infra:
    runs-on: ubuntu-latest
    name: Infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js LTS
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: npm

      - name: Use Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Retrieve Terraform State Namespace ID
        uses: cloudflare/wrangler-action@v3.13.0
        with:
          command: --version
          preCommands: npx wrangler kv:namespace list | jq -r '.[] | select( .title == "dispoflare-terraform-state" ) | .id' | awk '{print "tfstate_kv="$1}' >> $GITHUB_ENV
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

      - name: Ensure Initial Terraform State
        run: |
          if ! npx wrangler kv:key get --namespace-id=${{ env.tfstate_kv }} terraform.tfstate > /dev/null 2>&1; then
            echo '{"version": 4, "terraform_version": "1.5.0", "serial": 0, "lineage": "00000000-0000-0000-0000-000000000000", "outputs": {}, "resources": []}' > ./.terraform/initial.tfstate
            npx wrangler kv:key put terraform.tfstate --namespace-id=${{ env.tfstate_kv }} --path=./.terraform/initial.tfstate
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

      - name: Init Terraform
        run: terraform init
        working-directory: ./.terraform

      - name: Download Terraform State
        uses: cloudflare/wrangler-action@v3.13.0
        with:
          command: --version
          preCommands: npx wrangler kv:key get --namespace-id=${{ env.tfstate_kv }} terraform.tfstate > ./.terraform/terraform.tfstate || echo "{}" > ./.terraform/terraform.tfstate
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          postCommands: chmod 777 ./.terraform/terraform.tfstate

      - name: Configure Infrastructure with Terraform
        run: terraform plan && terraform apply -auto-approve
        working-directory: ./.terraform
        env:
          TF_VAR_cloudflare_account_id: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_sentry_dsn: ${{ secrets.SENTRY_DSN || '' }}

      - name: Store Updated Terraform State Back to KV Namespace
        uses: cloudflare/wrangler-action@v3.13.0
        with:
          command: kv:key put --namespace-id=${{ env.tfstate_kv }} terraform.tfstate --path=./.terraform/terraform.tfstate
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
